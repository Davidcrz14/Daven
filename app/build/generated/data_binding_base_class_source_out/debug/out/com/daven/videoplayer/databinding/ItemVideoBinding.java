// Generated by view binder compiler. Do not edit!
package com.daven.videoplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.daven.videoplayer.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVideoBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView durationText;

  @NonNull
  public final ImageView favoriteIcon;

  @NonNull
  public final ImageView moreOptions;

  @NonNull
  public final ImageView playIcon;

  @NonNull
  public final MaterialCardView thumbnailCard;

  @NonNull
  public final TextView videoFolder;

  @NonNull
  public final TextView videoSize;

  @NonNull
  public final ImageView videoThumbnail;

  @NonNull
  public final TextView videoTitle;

  private ItemVideoBinding(@NonNull MaterialCardView rootView, @NonNull TextView durationText,
      @NonNull ImageView favoriteIcon, @NonNull ImageView moreOptions, @NonNull ImageView playIcon,
      @NonNull MaterialCardView thumbnailCard, @NonNull TextView videoFolder,
      @NonNull TextView videoSize, @NonNull ImageView videoThumbnail,
      @NonNull TextView videoTitle) {
    this.rootView = rootView;
    this.durationText = durationText;
    this.favoriteIcon = favoriteIcon;
    this.moreOptions = moreOptions;
    this.playIcon = playIcon;
    this.thumbnailCard = thumbnailCard;
    this.videoFolder = videoFolder;
    this.videoSize = videoSize;
    this.videoThumbnail = videoThumbnail;
    this.videoTitle = videoTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.durationText;
      TextView durationText = ViewBindings.findChildViewById(rootView, id);
      if (durationText == null) {
        break missingId;
      }

      id = R.id.favoriteIcon;
      ImageView favoriteIcon = ViewBindings.findChildViewById(rootView, id);
      if (favoriteIcon == null) {
        break missingId;
      }

      id = R.id.moreOptions;
      ImageView moreOptions = ViewBindings.findChildViewById(rootView, id);
      if (moreOptions == null) {
        break missingId;
      }

      id = R.id.playIcon;
      ImageView playIcon = ViewBindings.findChildViewById(rootView, id);
      if (playIcon == null) {
        break missingId;
      }

      id = R.id.thumbnailCard;
      MaterialCardView thumbnailCard = ViewBindings.findChildViewById(rootView, id);
      if (thumbnailCard == null) {
        break missingId;
      }

      id = R.id.videoFolder;
      TextView videoFolder = ViewBindings.findChildViewById(rootView, id);
      if (videoFolder == null) {
        break missingId;
      }

      id = R.id.videoSize;
      TextView videoSize = ViewBindings.findChildViewById(rootView, id);
      if (videoSize == null) {
        break missingId;
      }

      id = R.id.videoThumbnail;
      ImageView videoThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (videoThumbnail == null) {
        break missingId;
      }

      id = R.id.videoTitle;
      TextView videoTitle = ViewBindings.findChildViewById(rootView, id);
      if (videoTitle == null) {
        break missingId;
      }

      return new ItemVideoBinding((MaterialCardView) rootView, durationText, favoriteIcon,
          moreOptions, playIcon, thumbnailCard, videoFolder, videoSize, videoThumbnail, videoTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
