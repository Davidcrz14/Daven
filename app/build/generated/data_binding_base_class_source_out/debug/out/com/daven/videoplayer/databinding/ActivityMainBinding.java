// Generated by view binder compiler. Do not edit!
package com.daven.videoplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.daven.videoplayer.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Chip chipAll;

  @NonNull
  public final Chip chipFolders;

  @NonNull
  public final Chip chipRecent;

  @NonNull
  public final LinearLayout emptyStateLayout;

  @NonNull
  public final ImageView favoriteButton;

  @NonNull
  public final ChipGroup filterChips;

  @NonNull
  public final HorizontalScrollView filterScrollView;

  @NonNull
  public final ProgressBar loadingProgress;

  @NonNull
  public final ImageView searchButton;

  @NonNull
  public final MaterialToolbar topAppBar;

  @NonNull
  public final RecyclerView videosRecyclerView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Chip chipAll,
      @NonNull Chip chipFolders, @NonNull Chip chipRecent, @NonNull LinearLayout emptyStateLayout,
      @NonNull ImageView favoriteButton, @NonNull ChipGroup filterChips,
      @NonNull HorizontalScrollView filterScrollView, @NonNull ProgressBar loadingProgress,
      @NonNull ImageView searchButton, @NonNull MaterialToolbar topAppBar,
      @NonNull RecyclerView videosRecyclerView) {
    this.rootView = rootView;
    this.chipAll = chipAll;
    this.chipFolders = chipFolders;
    this.chipRecent = chipRecent;
    this.emptyStateLayout = emptyStateLayout;
    this.favoriteButton = favoriteButton;
    this.filterChips = filterChips;
    this.filterScrollView = filterScrollView;
    this.loadingProgress = loadingProgress;
    this.searchButton = searchButton;
    this.topAppBar = topAppBar;
    this.videosRecyclerView = videosRecyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chipAll;
      Chip chipAll = ViewBindings.findChildViewById(rootView, id);
      if (chipAll == null) {
        break missingId;
      }

      id = R.id.chipFolders;
      Chip chipFolders = ViewBindings.findChildViewById(rootView, id);
      if (chipFolders == null) {
        break missingId;
      }

      id = R.id.chipRecent;
      Chip chipRecent = ViewBindings.findChildViewById(rootView, id);
      if (chipRecent == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      LinearLayout emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }

      id = R.id.favoriteButton;
      ImageView favoriteButton = ViewBindings.findChildViewById(rootView, id);
      if (favoriteButton == null) {
        break missingId;
      }

      id = R.id.filterChips;
      ChipGroup filterChips = ViewBindings.findChildViewById(rootView, id);
      if (filterChips == null) {
        break missingId;
      }

      id = R.id.filterScrollView;
      HorizontalScrollView filterScrollView = ViewBindings.findChildViewById(rootView, id);
      if (filterScrollView == null) {
        break missingId;
      }

      id = R.id.loadingProgress;
      ProgressBar loadingProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgress == null) {
        break missingId;
      }

      id = R.id.searchButton;
      ImageView searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      id = R.id.videosRecyclerView;
      RecyclerView videosRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (videosRecyclerView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, chipAll, chipFolders, chipRecent,
          emptyStateLayout, favoriteButton, filterChips, filterScrollView, loadingProgress,
          searchButton, topAppBar, videosRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
